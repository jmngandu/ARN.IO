export { MagicLinkErrorCode, EmailLinkErrorCode, isClerkAPIResponseError, isKnownError, isMetamaskError, isMagicLinkError, isEmailLinkError, } from '@clerk/shared/error';
export declare const noFrontendApiError = "Clerk: You must add the frontendApi prop to your <ClerkProvider>";
export declare const noClerkProviderError = "Clerk: You must wrap your application in a <ClerkProvider> component.";
export declare const noGuaranteedLoadedError: (hookName: string) => string;
export declare const noGuaranteedUserError: (hookName: string) => string;
export declare const multipleClerkProvidersError = "Clerk: You've added multiple <ClerkProvider> components in your React component tree. Wrap your components in a single <ClerkProvider>.";
export declare const hocChildrenNotAFunctionError = "Clerk: Child of WithClerk must be a function.";
export declare const multipleChildrenInButtonComponent: (name: string) => string;
export declare const invalidStateError = "Clerk: Invalid state. Feel free to submit a bug or reach out to support here: https://clerk.com/support";
export declare const unsupportedNonBrowserDomainOrProxyUrlFunction = "Clerk: Unsupported usage of isSatellite, domain or proxyUrl. The usage of isSatellite, domain or proxyUrl as function is not supported in non-browser environments.";
export declare const userProfilePageRenderedError = "Clerk: <UserProfile.Page /> component needs to be a direct child of `<UserProfile />` or `<UserButton />`.";
export declare const userProfileLinkRenderedError = "Clerk: <UserProfile.Link /> component needs to be a direct child of `<UserProfile />` or `<UserButton />`.";
export declare const organizationProfilePageRenderedError = "Clerk: <OrganizationProfile.Page /> component needs to be a direct child of `<OrganizationProfile />` or `<OrganizationSwitcher />`.";
export declare const organizationProfileLinkRenderedError = "Clerk: <OrganizationProfile.Link /> component needs to be a direct child of `<OrganizationProfile />` or `<OrganizationSwitcher />`.";
export declare const customPagesIgnoredComponent: (componentName: string) => string;
export declare const customPageWrongProps: (componentName: string) => string;
export declare const customLinkWrongProps: (componentName: string) => string;
export declare const useAuthHasRequiresRoleOrPermission = "Clerk: Missing parameters. `has` from `useAuth` requires a permission or role key to be passed. Example usage: `has({permission: \"org:posts:edit\"`";
//# sourceMappingURL=errors.d.ts.map