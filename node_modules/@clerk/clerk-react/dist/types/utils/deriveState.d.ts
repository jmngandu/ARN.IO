import type { ActiveSessionResource, InitialState, OrganizationResource, Resources, UserResource } from '@clerk/types';
export declare const deriveState: (clerkLoaded: boolean, state: Resources, initialState: InitialState | undefined) => {
    userId: string | null | undefined;
    user: UserResource | null | undefined;
    sessionId: string | null | undefined;
    session: ActiveSessionResource | null | undefined;
    organization: OrganizationResource | null | undefined;
    orgId: string | null | undefined;
    orgRole: import("@clerk/types").Autocomplete<"admin" | "basic_member" | "guest_member"> | null | undefined;
    orgSlug: string | null | undefined;
    orgPermissions: import("@clerk/types").Autocomplete<import("@clerk/types").OrganizationSystemPermissionKey>[] | null | undefined;
    actor: import("@clerk/types").ActJWTClaim | null | undefined;
    lastOrganizationInvitation: import("@clerk/types").OrganizationInvitationResource | null | undefined;
    lastOrganizationMember: import("@clerk/types").OrganizationMembershipResource | null | undefined;
};
//# sourceMappingURL=deriveState.d.ts.map